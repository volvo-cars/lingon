// Code generated by lingon. EDIT AS MUCH AS YOU LIKE.

package tekton

import (
	apiextensionsv1 "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

var ClustertasksDevCRD = &apiextensionsv1.CustomResourceDefinition{
	ObjectMeta: metav1.ObjectMeta{
		Labels: map[string]string{
			"app.kubernetes.io/instance":  "default",
			"app.kubernetes.io/part-of":   "tekton-pipelines",
			"pipeline.tekton.dev/release": "v0.45.0",
			"version":                     "v0.45.0",
		},
		Name: "clustertasks.tekton.dev",
	},
	Spec: apiextensionsv1.CustomResourceDefinitionSpec{
		Conversion: &apiextensionsv1.CustomResourceConversion{
			Strategy: apiextensionsv1.ConversionStrategyType("Webhook"),
			Webhook: &apiextensionsv1.WebhookConversion{
				ClientConfig: &apiextensionsv1.WebhookClientConfig{Service: &apiextensionsv1.ServiceReference{
					Name:      "tekton-pipelines-webhook",
					Namespace: "tekton-pipelines",
				}},
				ConversionReviewVersions: []string{"v1beta1"},
			},
		},
		Group: "tekton.dev",
		Names: apiextensionsv1.CustomResourceDefinitionNames{
			Categories: []string{"tekton", "tekton-pipelines"},
			Kind:       "ClusterTask",
			Plural:     "clustertasks",
			Singular:   "clustertask",
		},
		Scope: apiextensionsv1.ResourceScope("Cluster"),
		Versions: []apiextensionsv1.CustomResourceDefinitionVersion{{
			Name: "v1beta1",
			Schema: &apiextensionsv1.CustomResourceValidation{OpenAPIV3Schema: &apiextensionsv1.JSONSchemaProps{
				Type:                   "object",
				XPreserveUnknownFields: P(true),
			}},
			Served:       true,
			Storage:      true,
			Subresources: &apiextensionsv1.CustomResourceSubresources{},
		}},
	},
	TypeMeta: metav1.TypeMeta{
		APIVersion: "apiextensions.k8s.io/v1",
		Kind:       "CustomResourceDefinition",
	},
}

var CustomrunsDevCRD = &apiextensionsv1.CustomResourceDefinition{
	ObjectMeta: metav1.ObjectMeta{
		Labels: map[string]string{
			"app.kubernetes.io/instance":  "default",
			"app.kubernetes.io/part-of":   "tekton-pipelines",
			"pipeline.tekton.dev/release": "v0.45.0",
			"version":                     "v0.45.0",
		},
		Name: "customruns.tekton.dev",
	},
	Spec: apiextensionsv1.CustomResourceDefinitionSpec{
		Group: "tekton.dev",
		Names: apiextensionsv1.CustomResourceDefinitionNames{
			Categories: []string{"tekton", "tekton-pipelines"},
			Kind:       "CustomRun",
			Plural:     "customruns",
			Singular:   "customrun",
		},
		Scope: apiextensionsv1.ResourceScope("Namespaced"),
		Versions: []apiextensionsv1.CustomResourceDefinitionVersion{{
			AdditionalPrinterColumns: []apiextensionsv1.CustomResourceColumnDefinition{{
				JSONPath: ".status.conditions[?(@.type==\"Succeeded\")].status",
				Name:     "Succeeded",
				Type:     "string",
			}, {
				JSONPath: ".status.conditions[?(@.type==\"Succeeded\")].reason",
				Name:     "Reason",
				Type:     "string",
			}, {
				JSONPath: ".status.startTime",
				Name:     "StartTime",
				Type:     "date",
			}, {
				JSONPath: ".status.completionTime",
				Name:     "CompletionTime",
				Type:     "date",
			}},
			Name: "v1beta1",
			Schema: &apiextensionsv1.CustomResourceValidation{OpenAPIV3Schema: &apiextensionsv1.JSONSchemaProps{
				Type:                   "object",
				XPreserveUnknownFields: P(true),
			}},
			Served:       true,
			Storage:      true,
			Subresources: &apiextensionsv1.CustomResourceSubresources{},
		}},
	},
	TypeMeta: metav1.TypeMeta{
		APIVersion: "apiextensions.k8s.io/v1",
		Kind:       "CustomResourceDefinition",
	},
}

var PipelineresourcesDevCRD = &apiextensionsv1.CustomResourceDefinition{
	ObjectMeta: metav1.ObjectMeta{
		Labels: map[string]string{
			"app.kubernetes.io/instance":  "default",
			"app.kubernetes.io/part-of":   "tekton-pipelines",
			"pipeline.tekton.dev/release": "v0.45.0",
			"version":                     "v0.45.0",
		},
		Name: "pipelineresources.tekton.dev",
	},
	Spec: apiextensionsv1.CustomResourceDefinitionSpec{
		Group: "tekton.dev",
		Names: apiextensionsv1.CustomResourceDefinitionNames{
			Categories: []string{"tekton", "tekton-pipelines"},
			Kind:       "PipelineResource",
			Plural:     "pipelineresources",
			Singular:   "pipelineresource",
		},
		Scope: apiextensionsv1.ResourceScope("Namespaced"),
		Versions: []apiextensionsv1.CustomResourceDefinitionVersion{{
			Name: "v1alpha1",
			Schema: &apiextensionsv1.CustomResourceValidation{OpenAPIV3Schema: &apiextensionsv1.JSONSchemaProps{
				Type:                   "object",
				XPreserveUnknownFields: P(true),
			}},
			Served:       true,
			Storage:      true,
			Subresources: &apiextensionsv1.CustomResourceSubresources{},
		}},
	},
	TypeMeta: metav1.TypeMeta{
		APIVersion: "apiextensions.k8s.io/v1",
		Kind:       "CustomResourceDefinition",
	},
}

var PipelinerunsDevCRD = &apiextensionsv1.CustomResourceDefinition{
	ObjectMeta: metav1.ObjectMeta{
		Labels: map[string]string{
			"app.kubernetes.io/instance":  "default",
			"app.kubernetes.io/part-of":   "tekton-pipelines",
			"pipeline.tekton.dev/release": "v0.45.0",
			"version":                     "v0.45.0",
		},
		Name: "pipelineruns.tekton.dev",
	},
	Spec: apiextensionsv1.CustomResourceDefinitionSpec{
		Conversion: &apiextensionsv1.CustomResourceConversion{
			Strategy: apiextensionsv1.ConversionStrategyType("Webhook"),
			Webhook: &apiextensionsv1.WebhookConversion{
				ClientConfig: &apiextensionsv1.WebhookClientConfig{Service: &apiextensionsv1.ServiceReference{
					Name:      "tekton-pipelines-webhook",
					Namespace: "tekton-pipelines",
				}},
				ConversionReviewVersions: []string{"v1beta1", "v1"},
			},
		},
		Group: "tekton.dev",
		Names: apiextensionsv1.CustomResourceDefinitionNames{
			Categories: []string{"tekton", "tekton-pipelines"},
			Kind:       "PipelineRun",
			Plural:     "pipelineruns",
			ShortNames: []string{"pr", "prs"},
			Singular:   "pipelinerun",
		},
		Scope: apiextensionsv1.ResourceScope("Namespaced"),
		Versions: []apiextensionsv1.CustomResourceDefinitionVersion{{
			AdditionalPrinterColumns: []apiextensionsv1.CustomResourceColumnDefinition{{
				JSONPath: ".status.conditions[?(@.type==\"Succeeded\")].status",
				Name:     "Succeeded",
				Type:     "string",
			}, {
				JSONPath: ".status.conditions[?(@.type==\"Succeeded\")].reason",
				Name:     "Reason",
				Type:     "string",
			}, {
				JSONPath: ".status.startTime",
				Name:     "StartTime",
				Type:     "date",
			}, {
				JSONPath: ".status.completionTime",
				Name:     "CompletionTime",
				Type:     "date",
			}},
			Name: "v1beta1",
			Schema: &apiextensionsv1.CustomResourceValidation{OpenAPIV3Schema: &apiextensionsv1.JSONSchemaProps{
				Type:                   "object",
				XPreserveUnknownFields: P(true),
			}},
			Served:       true,
			Storage:      true,
			Subresources: &apiextensionsv1.CustomResourceSubresources{},
		}, {
			AdditionalPrinterColumns: []apiextensionsv1.CustomResourceColumnDefinition{{
				JSONPath: ".status.conditions[?(@.type==\"Succeeded\")].status",
				Name:     "Succeeded",
				Type:     "string",
			}, {
				JSONPath: ".status.conditions[?(@.type==\"Succeeded\")].reason",
				Name:     "Reason",
				Type:     "string",
			}, {
				JSONPath: ".status.startTime",
				Name:     "StartTime",
				Type:     "date",
			}, {
				JSONPath: ".status.completionTime",
				Name:     "CompletionTime",
				Type:     "date",
			}},
			Name: "v1",
			Schema: &apiextensionsv1.CustomResourceValidation{OpenAPIV3Schema: &apiextensionsv1.JSONSchemaProps{
				Type:                   "object",
				XPreserveUnknownFields: P(true),
			}},
			Served:       true,
			Subresources: &apiextensionsv1.CustomResourceSubresources{},
		}},
	},
	TypeMeta: metav1.TypeMeta{
		APIVersion: "apiextensions.k8s.io/v1",
		Kind:       "CustomResourceDefinition",
	},
}

var PipelinesDevCRD = &apiextensionsv1.CustomResourceDefinition{
	ObjectMeta: metav1.ObjectMeta{
		Labels: map[string]string{
			"app.kubernetes.io/instance":  "default",
			"app.kubernetes.io/part-of":   "tekton-pipelines",
			"pipeline.tekton.dev/release": "v0.45.0",
			"version":                     "v0.45.0",
		},
		Name: "pipelines.tekton.dev",
	},
	Spec: apiextensionsv1.CustomResourceDefinitionSpec{
		Conversion: &apiextensionsv1.CustomResourceConversion{
			Strategy: apiextensionsv1.ConversionStrategyType("Webhook"),
			Webhook: &apiextensionsv1.WebhookConversion{
				ClientConfig: &apiextensionsv1.WebhookClientConfig{Service: &apiextensionsv1.ServiceReference{
					Name:      "tekton-pipelines-webhook",
					Namespace: "tekton-pipelines",
				}},
				ConversionReviewVersions: []string{"v1beta1", "v1"},
			},
		},
		Group: "tekton.dev",
		Names: apiextensionsv1.CustomResourceDefinitionNames{
			Categories: []string{"tekton", "tekton-pipelines"},
			Kind:       "Pipeline",
			Plural:     "pipelines",
			Singular:   "pipeline",
		},
		Scope: apiextensionsv1.ResourceScope("Namespaced"),
		Versions: []apiextensionsv1.CustomResourceDefinitionVersion{{
			Name: "v1beta1",
			Schema: &apiextensionsv1.CustomResourceValidation{OpenAPIV3Schema: &apiextensionsv1.JSONSchemaProps{
				Type:                   "object",
				XPreserveUnknownFields: P(true),
			}},
			Served:       true,
			Storage:      true,
			Subresources: &apiextensionsv1.CustomResourceSubresources{},
		}, {
			Name: "v1",
			Schema: &apiextensionsv1.CustomResourceValidation{OpenAPIV3Schema: &apiextensionsv1.JSONSchemaProps{
				Type:                   "object",
				XPreserveUnknownFields: P(true),
			}},
			Served:       true,
			Subresources: &apiextensionsv1.CustomResourceSubresources{},
		}},
	},
	TypeMeta: metav1.TypeMeta{
		APIVersion: "apiextensions.k8s.io/v1",
		Kind:       "CustomResourceDefinition",
	},
}

var ResolutionrequestsResolutionDevCRD = &apiextensionsv1.CustomResourceDefinition{
	ObjectMeta: metav1.ObjectMeta{
		Labels: map[string]string{"resolution.tekton.dev/release": "devel"},
		Name:   "resolutionrequests.resolution.tekton.dev",
	},
	Spec: apiextensionsv1.CustomResourceDefinitionSpec{
		Conversion: &apiextensionsv1.CustomResourceConversion{
			Strategy: apiextensionsv1.ConversionStrategyType("Webhook"),
			Webhook: &apiextensionsv1.WebhookConversion{
				ClientConfig: &apiextensionsv1.WebhookClientConfig{Service: &apiextensionsv1.ServiceReference{
					Name:      "tekton-pipelines-webhook",
					Namespace: "tekton-pipelines",
				}},
				ConversionReviewVersions: []string{"v1alpha1", "v1beta1"},
			},
		},
		Group: "resolution.tekton.dev",
		Names: apiextensionsv1.CustomResourceDefinitionNames{
			Categories: []string{"tekton", "tekton-pipelines"},
			Kind:       "ResolutionRequest",
			Plural:     "resolutionrequests",
			ShortNames: []string{"resolutionrequest", "resolutionrequests"},
			Singular:   "resolutionrequest",
		},
		Scope: apiextensionsv1.ResourceScope("Namespaced"),
		Versions: []apiextensionsv1.CustomResourceDefinitionVersion{{
			AdditionalPrinterColumns: []apiextensionsv1.CustomResourceColumnDefinition{{
				JSONPath: ".status.conditions[?(@.type=='Succeeded')].status",
				Name:     "Succeeded",
				Type:     "string",
			}, {
				JSONPath: ".status.conditions[?(@.type=='Succeeded')].reason",
				Name:     "Reason",
				Type:     "string",
			}},
			Deprecated: true,
			Name:       "v1alpha1",
			Schema: &apiextensionsv1.CustomResourceValidation{OpenAPIV3Schema: &apiextensionsv1.JSONSchemaProps{
				Type:                   "object",
				XPreserveUnknownFields: P(true),
			}},
			Served:       true,
			Subresources: &apiextensionsv1.CustomResourceSubresources{},
		}, {
			AdditionalPrinterColumns: []apiextensionsv1.CustomResourceColumnDefinition{{
				JSONPath: ".metadata.ownerReferences[0].kind",
				Name:     "OwnerKind",
				Type:     "string",
			}, {
				JSONPath: ".metadata.ownerReferences[0].name",
				Name:     "Owner",
				Type:     "string",
			}, {
				JSONPath: ".status.conditions[?(@.type=='Succeeded')].status",
				Name:     "Succeeded",
				Type:     "string",
			}, {
				JSONPath: ".status.conditions[?(@.type=='Succeeded')].reason",
				Name:     "Reason",
				Type:     "string",
			}, {
				JSONPath: ".metadata.creationTimestamp",
				Name:     "StartTime",
				Type:     "string",
			}, {
				JSONPath: ".status.conditions[?(@.type=='Succeeded')].lastTransitionTime",
				Name:     "EndTime",
				Type:     "string",
			}},
			Name: "v1beta1",
			Schema: &apiextensionsv1.CustomResourceValidation{OpenAPIV3Schema: &apiextensionsv1.JSONSchemaProps{
				Type:                   "object",
				XPreserveUnknownFields: P(true),
			}},
			Served:       true,
			Storage:      true,
			Subresources: &apiextensionsv1.CustomResourceSubresources{},
		}},
	},
	TypeMeta: metav1.TypeMeta{
		APIVersion: "apiextensions.k8s.io/v1",
		Kind:       "CustomResourceDefinition",
	},
}

var RunsDevCRD = &apiextensionsv1.CustomResourceDefinition{
	ObjectMeta: metav1.ObjectMeta{
		Labels: map[string]string{
			"app.kubernetes.io/instance":  "default",
			"app.kubernetes.io/part-of":   "tekton-pipelines",
			"pipeline.tekton.dev/release": "v0.45.0",
			"version":                     "v0.45.0",
		},
		Name: "runs.tekton.dev",
	},
	Spec: apiextensionsv1.CustomResourceDefinitionSpec{
		Group: "tekton.dev",
		Names: apiextensionsv1.CustomResourceDefinitionNames{
			Categories: []string{"tekton", "tekton-pipelines"},
			Kind:       "Run",
			Plural:     "runs",
			Singular:   "run",
		},
		Scope: apiextensionsv1.ResourceScope("Namespaced"),
		Versions: []apiextensionsv1.CustomResourceDefinitionVersion{{
			AdditionalPrinterColumns: []apiextensionsv1.CustomResourceColumnDefinition{{
				JSONPath: ".status.conditions[?(@.type==\"Succeeded\")].status",
				Name:     "Succeeded",
				Type:     "string",
			}, {
				JSONPath: ".status.conditions[?(@.type==\"Succeeded\")].reason",
				Name:     "Reason",
				Type:     "string",
			}, {
				JSONPath: ".status.startTime",
				Name:     "StartTime",
				Type:     "date",
			}, {
				JSONPath: ".status.completionTime",
				Name:     "CompletionTime",
				Type:     "date",
			}},
			Name: "v1alpha1",
			Schema: &apiextensionsv1.CustomResourceValidation{OpenAPIV3Schema: &apiextensionsv1.JSONSchemaProps{
				Type:                   "object",
				XPreserveUnknownFields: P(true),
			}},
			Served:       true,
			Storage:      true,
			Subresources: &apiextensionsv1.CustomResourceSubresources{},
		}},
	},
	TypeMeta: metav1.TypeMeta{
		APIVersion: "apiextensions.k8s.io/v1",
		Kind:       "CustomResourceDefinition",
	},
}

var TaskrunsDevCRD = &apiextensionsv1.CustomResourceDefinition{
	ObjectMeta: metav1.ObjectMeta{
		Labels: map[string]string{
			"app.kubernetes.io/instance":  "default",
			"app.kubernetes.io/part-of":   "tekton-pipelines",
			"pipeline.tekton.dev/release": "v0.45.0",
			"version":                     "v0.45.0",
		},
		Name: "taskruns.tekton.dev",
	},
	Spec: apiextensionsv1.CustomResourceDefinitionSpec{
		Conversion: &apiextensionsv1.CustomResourceConversion{
			Strategy: apiextensionsv1.ConversionStrategyType("Webhook"),
			Webhook: &apiextensionsv1.WebhookConversion{
				ClientConfig: &apiextensionsv1.WebhookClientConfig{Service: &apiextensionsv1.ServiceReference{
					Name:      "tekton-pipelines-webhook",
					Namespace: "tekton-pipelines",
				}},
				ConversionReviewVersions: []string{"v1beta1", "v1"},
			},
		},
		Group: "tekton.dev",
		Names: apiextensionsv1.CustomResourceDefinitionNames{
			Categories: []string{"tekton", "tekton-pipelines"},
			Kind:       "TaskRun",
			Plural:     "taskruns",
			ShortNames: []string{"tr", "trs"},
			Singular:   "taskrun",
		},
		Scope: apiextensionsv1.ResourceScope("Namespaced"),
		Versions: []apiextensionsv1.CustomResourceDefinitionVersion{{
			AdditionalPrinterColumns: []apiextensionsv1.CustomResourceColumnDefinition{{
				JSONPath: ".status.conditions[?(@.type==\"Succeeded\")].status",
				Name:     "Succeeded",
				Type:     "string",
			}, {
				JSONPath: ".status.conditions[?(@.type==\"Succeeded\")].reason",
				Name:     "Reason",
				Type:     "string",
			}, {
				JSONPath: ".status.startTime",
				Name:     "StartTime",
				Type:     "date",
			}, {
				JSONPath: ".status.completionTime",
				Name:     "CompletionTime",
				Type:     "date",
			}},
			Name: "v1beta1",
			Schema: &apiextensionsv1.CustomResourceValidation{OpenAPIV3Schema: &apiextensionsv1.JSONSchemaProps{
				Type:                   "object",
				XPreserveUnknownFields: P(true),
			}},
			Served:       true,
			Storage:      true,
			Subresources: &apiextensionsv1.CustomResourceSubresources{},
		}, {
			AdditionalPrinterColumns: []apiextensionsv1.CustomResourceColumnDefinition{{
				JSONPath: ".status.conditions[?(@.type==\"Succeeded\")].status",
				Name:     "Succeeded",
				Type:     "string",
			}, {
				JSONPath: ".status.conditions[?(@.type==\"Succeeded\")].reason",
				Name:     "Reason",
				Type:     "string",
			}, {
				JSONPath: ".status.startTime",
				Name:     "StartTime",
				Type:     "date",
			}, {
				JSONPath: ".status.completionTime",
				Name:     "CompletionTime",
				Type:     "date",
			}},
			Name: "v1",
			Schema: &apiextensionsv1.CustomResourceValidation{OpenAPIV3Schema: &apiextensionsv1.JSONSchemaProps{
				Type:                   "object",
				XPreserveUnknownFields: P(true),
			}},
			Served:       true,
			Subresources: &apiextensionsv1.CustomResourceSubresources{},
		}},
	},
	TypeMeta: metav1.TypeMeta{
		APIVersion: "apiextensions.k8s.io/v1",
		Kind:       "CustomResourceDefinition",
	},
}

var TasksDevCRD = &apiextensionsv1.CustomResourceDefinition{
	ObjectMeta: metav1.ObjectMeta{
		Labels: map[string]string{
			"app.kubernetes.io/instance":  "default",
			"app.kubernetes.io/part-of":   "tekton-pipelines",
			"pipeline.tekton.dev/release": "v0.45.0",
			"version":                     "v0.45.0",
		},
		Name: "tasks.tekton.dev",
	},
	Spec: apiextensionsv1.CustomResourceDefinitionSpec{
		Conversion: &apiextensionsv1.CustomResourceConversion{
			Strategy: apiextensionsv1.ConversionStrategyType("Webhook"),
			Webhook: &apiextensionsv1.WebhookConversion{
				ClientConfig: &apiextensionsv1.WebhookClientConfig{Service: &apiextensionsv1.ServiceReference{
					Name:      "tekton-pipelines-webhook",
					Namespace: "tekton-pipelines",
				}},
				ConversionReviewVersions: []string{"v1beta1", "v1"},
			},
		},
		Group: "tekton.dev",
		Names: apiextensionsv1.CustomResourceDefinitionNames{
			Categories: []string{"tekton", "tekton-pipelines"},
			Kind:       "Task",
			Plural:     "tasks",
			Singular:   "task",
		},
		Scope: apiextensionsv1.ResourceScope("Namespaced"),
		Versions: []apiextensionsv1.CustomResourceDefinitionVersion{{
			Name: "v1beta1",
			Schema: &apiextensionsv1.CustomResourceValidation{OpenAPIV3Schema: &apiextensionsv1.JSONSchemaProps{
				Type:                   "object",
				XPreserveUnknownFields: P(true),
			}},
			Served:       true,
			Storage:      true,
			Subresources: &apiextensionsv1.CustomResourceSubresources{},
		}, {
			Name: "v1",
			Schema: &apiextensionsv1.CustomResourceValidation{OpenAPIV3Schema: &apiextensionsv1.JSONSchemaProps{
				Type:                   "object",
				XPreserveUnknownFields: P(true),
			}},
			Served:       true,
			Subresources: &apiextensionsv1.CustomResourceSubresources{},
		}},
	},
	TypeMeta: metav1.TypeMeta{
		APIVersion: "apiextensions.k8s.io/v1",
		Kind:       "CustomResourceDefinition",
	},
}

var VerificationpoliciesDevCRD = &apiextensionsv1.CustomResourceDefinition{
	ObjectMeta: metav1.ObjectMeta{
		Labels: map[string]string{
			"app.kubernetes.io/instance":  "default",
			"app.kubernetes.io/part-of":   "tekton-pipelines",
			"pipeline.tekton.dev/release": "v0.45.0",
			"version":                     "v0.45.0",
		},
		Name: "verificationpolicies.tekton.dev",
	},
	Spec: apiextensionsv1.CustomResourceDefinitionSpec{
		Group: "tekton.dev",
		Names: apiextensionsv1.CustomResourceDefinitionNames{
			Categories: []string{"tekton", "tekton-pipelines"},
			Kind:       "VerificationPolicy",
			Plural:     "verificationpolicies",
			Singular:   "verificationpolicy",
		},
		Scope: apiextensionsv1.ResourceScope("Namespaced"),
		Versions: []apiextensionsv1.CustomResourceDefinitionVersion{{
			Name: "v1alpha1",
			Schema: &apiextensionsv1.CustomResourceValidation{OpenAPIV3Schema: &apiextensionsv1.JSONSchemaProps{
				Type:                   "object",
				XPreserveUnknownFields: P(true),
			}},
			Served:  true,
			Storage: true,
		}},
	},
	TypeMeta: metav1.TypeMeta{
		APIVersion: "apiextensions.k8s.io/v1",
		Kind:       "CustomResourceDefinition",
	},
}
