// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package local

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

func NewSensitiveFile(name string, args SensitiveFileArgs) *SensitiveFile {
	return &SensitiveFile{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SensitiveFile)(nil)

type SensitiveFile struct {
	Name  string
	Args  SensitiveFileArgs
	state *sensitiveFileState
}

func (sf *SensitiveFile) Type() string {
	return "local_sensitive_file"
}

func (sf *SensitiveFile) LocalName() string {
	return sf.Name
}

func (sf *SensitiveFile) Configuration() interface{} {
	return sf.Args
}

func (sf *SensitiveFile) Attributes() sensitiveFileAttributes {
	return sensitiveFileAttributes{ref: terra.ReferenceResource(sf)}
}

func (sf *SensitiveFile) ImportState(av io.Reader) error {
	sf.state = &sensitiveFileState{}
	if err := json.NewDecoder(av).Decode(sf.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sf.Type(), sf.LocalName(), err)
	}
	return nil
}

func (sf *SensitiveFile) State() (*sensitiveFileState, bool) {
	return sf.state, sf.state != nil
}

func (sf *SensitiveFile) StateMust() *sensitiveFileState {
	if sf.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sf.Type(), sf.LocalName()))
	}
	return sf.state
}

func (sf *SensitiveFile) DependOn() terra.Reference {
	return terra.ReferenceResource(sf)
}

type SensitiveFileArgs struct {
	// Content: string, optional
	Content terra.StringValue `hcl:"content,attr"`
	// ContentBase64: string, optional
	ContentBase64 terra.StringValue `hcl:"content_base64,attr"`
	// DirectoryPermission: string, optional
	DirectoryPermission terra.StringValue `hcl:"directory_permission,attr"`
	// FilePermission: string, optional
	FilePermission terra.StringValue `hcl:"file_permission,attr"`
	// Filename: string, required
	Filename terra.StringValue `hcl:"filename,attr" validate:"required"`
	// Source: string, optional
	Source terra.StringValue `hcl:"source,attr"`
	// DependsOn contains resources that SensitiveFile depends on
	DependsOn terra.Dependencies `hcl:"depends_on,attr"`
}
type sensitiveFileAttributes struct {
	ref terra.Reference
}

func (sf sensitiveFileAttributes) Content() terra.StringValue {
	return terra.ReferenceString(sf.ref.Append("content"))
}

func (sf sensitiveFileAttributes) ContentBase64() terra.StringValue {
	return terra.ReferenceString(sf.ref.Append("content_base64"))
}

func (sf sensitiveFileAttributes) ContentBase64Sha256() terra.StringValue {
	return terra.ReferenceString(sf.ref.Append("content_base64sha256"))
}

func (sf sensitiveFileAttributes) ContentBase64Sha512() terra.StringValue {
	return terra.ReferenceString(sf.ref.Append("content_base64sha512"))
}

func (sf sensitiveFileAttributes) ContentMd5() terra.StringValue {
	return terra.ReferenceString(sf.ref.Append("content_md5"))
}

func (sf sensitiveFileAttributes) ContentSha1() terra.StringValue {
	return terra.ReferenceString(sf.ref.Append("content_sha1"))
}

func (sf sensitiveFileAttributes) ContentSha256() terra.StringValue {
	return terra.ReferenceString(sf.ref.Append("content_sha256"))
}

func (sf sensitiveFileAttributes) ContentSha512() terra.StringValue {
	return terra.ReferenceString(sf.ref.Append("content_sha512"))
}

func (sf sensitiveFileAttributes) DirectoryPermission() terra.StringValue {
	return terra.ReferenceString(sf.ref.Append("directory_permission"))
}

func (sf sensitiveFileAttributes) FilePermission() terra.StringValue {
	return terra.ReferenceString(sf.ref.Append("file_permission"))
}

func (sf sensitiveFileAttributes) Filename() terra.StringValue {
	return terra.ReferenceString(sf.ref.Append("filename"))
}

func (sf sensitiveFileAttributes) Id() terra.StringValue {
	return terra.ReferenceString(sf.ref.Append("id"))
}

func (sf sensitiveFileAttributes) Source() terra.StringValue {
	return terra.ReferenceString(sf.ref.Append("source"))
}

type sensitiveFileState struct {
	Content             string `json:"content"`
	ContentBase64       string `json:"content_base64"`
	ContentBase64Sha256 string `json:"content_base64sha256"`
	ContentBase64Sha512 string `json:"content_base64sha512"`
	ContentMd5          string `json:"content_md5"`
	ContentSha1         string `json:"content_sha1"`
	ContentSha256       string `json:"content_sha256"`
	ContentSha512       string `json:"content_sha512"`
	DirectoryPermission string `json:"directory_permission"`
	FilePermission      string `json:"file_permission"`
	Filename            string `json:"filename"`
	Id                  string `json:"id"`
	Source              string `json:"source"`
}
