// Code generated by lingon. EDIT AS MUCH AS YOU LIKE.

package certmanager

import (
	corev1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

var CainjectorSA = &corev1.ServiceAccount{
	AutomountServiceAccountToken: P(true),
	ObjectMeta: metav1.ObjectMeta{
		Labels: map[string]string{
			"app":                          "cainjector",
			"app.kubernetes.io/component":  "cainjector",
			"app.kubernetes.io/instance":   "cert-manager",
			"app.kubernetes.io/managed-by": "Helm",
			"app.kubernetes.io/name":       "cainjector",
			"app.kubernetes.io/version":    "v1.12.2",
			"helm.sh/chart":                "cert-manager-v1.12.2",
		},
		Name:      "cert-manager-cainjector",
		Namespace: "cert-manager",
	},
	TypeMeta: metav1.TypeMeta{
		APIVersion: "v1",
		Kind:       "ServiceAccount",
	},
}

var SA = &corev1.ServiceAccount{
	AutomountServiceAccountToken: P(true),
	ObjectMeta: metav1.ObjectMeta{
		Labels: map[string]string{
			"app":                          "cert-manager",
			"app.kubernetes.io/component":  "controller",
			"app.kubernetes.io/instance":   "cert-manager",
			"app.kubernetes.io/managed-by": "Helm",
			"app.kubernetes.io/name":       "cert-manager",
			"app.kubernetes.io/version":    "v1.12.2",
			"helm.sh/chart":                "cert-manager-v1.12.2",
		},
		Name:      "cert-manager",
		Namespace: "cert-manager",
	},
	TypeMeta: metav1.TypeMeta{
		APIVersion: "v1",
		Kind:       "ServiceAccount",
	},
}

var StartupapicheckSA = &corev1.ServiceAccount{
	AutomountServiceAccountToken: P(true),
	ObjectMeta: metav1.ObjectMeta{
		Annotations: map[string]string{
			"helm.sh/hook":               "post-install",
			"helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded",
			"helm.sh/hook-weight":        "-5",
		},
		Labels: map[string]string{
			"app":                          "startupapicheck",
			"app.kubernetes.io/component":  "startupapicheck",
			"app.kubernetes.io/instance":   "cert-manager",
			"app.kubernetes.io/managed-by": "Helm",
			"app.kubernetes.io/name":       "startupapicheck",
			"app.kubernetes.io/version":    "v1.12.2",
			"helm.sh/chart":                "cert-manager-v1.12.2",
		},
		Name:      "cert-manager-startupapicheck",
		Namespace: "cert-manager",
	},
	TypeMeta: metav1.TypeMeta{
		APIVersion: "v1",
		Kind:       "ServiceAccount",
	},
}

var WebhookSA = &corev1.ServiceAccount{
	AutomountServiceAccountToken: P(true),
	ObjectMeta: metav1.ObjectMeta{
		Labels: map[string]string{
			"app":                          "webhook",
			"app.kubernetes.io/component":  "webhook",
			"app.kubernetes.io/instance":   "cert-manager",
			"app.kubernetes.io/managed-by": "Helm",
			"app.kubernetes.io/name":       "webhook",
			"app.kubernetes.io/version":    "v1.12.2",
			"helm.sh/chart":                "cert-manager-v1.12.2",
		},
		Name:      "cert-manager-webhook",
		Namespace: "cert-manager",
	},
	TypeMeta: metav1.TypeMeta{
		APIVersion: "v1",
		Kind:       "ServiceAccount",
	},
}
