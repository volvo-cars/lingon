// Code generated by lingon. EDIT AS MUCH AS YOU LIKE.

package metricsserver

import (
	corev1 "k8s.io/api/core/v1"
	rbacv1 "k8s.io/api/rbac/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

var SA = &corev1.ServiceAccount{
	ObjectMeta: metav1.ObjectMeta{
		Labels: map[string]string{
			"app.kubernetes.io/instance":   "metrics-server",
			"app.kubernetes.io/managed-by": "Helm",
			"app.kubernetes.io/name":       "metrics-server",
			"app.kubernetes.io/version":    "0.6.3",
			"helm.sh/chart":                "metrics-server-3.10.0",
		},
		Name:      "metrics-server",
		Namespace: namespace,
	},
	TypeMeta: metav1.TypeMeta{
		APIVersion: "v1",
		Kind:       "ServiceAccount",
	},
}

var AuthReaderRB = &rbacv1.RoleBinding{
	ObjectMeta: metav1.ObjectMeta{
		Labels: map[string]string{
			"app.kubernetes.io/instance":   "metrics-server",
			"app.kubernetes.io/managed-by": "Helm",
			"app.kubernetes.io/name":       "metrics-server",
			"app.kubernetes.io/version":    "0.6.3",
			"helm.sh/chart":                "metrics-server-3.10.0",
		},
		Name:      "metrics-server-auth-reader",
		Namespace: "kube-system",
	},
	RoleRef: rbacv1.RoleRef{
		APIGroup: "rbac.authorization.k8s.io",
		Kind:     "Role",
		Name:     "extension-apiserver-authentication-reader",
	},
	Subjects: []rbacv1.Subject{
		{
			Kind:      "ServiceAccount",
			Name:      "metrics-server",
			Namespace: namespace,
		},
	},
	TypeMeta: metav1.TypeMeta{
		APIVersion: "rbac.authorization.k8s.io/v1",
		Kind:       "RoleBinding",
	},
}

var SystemAggregatedReaderCR = &rbacv1.ClusterRole{
	ObjectMeta: metav1.ObjectMeta{
		Labels: map[string]string{
			"app.kubernetes.io/instance":                   "metrics-server",
			"app.kubernetes.io/managed-by":                 "Helm",
			"app.kubernetes.io/name":                       "metrics-server",
			"app.kubernetes.io/version":                    "0.6.3",
			"helm.sh/chart":                                "metrics-server-3.10.0",
			"rbac.authorization.k8s.io/aggregate-to-admin": "true",
			"rbac.authorization.k8s.io/aggregate-to-edit":  "true",
			"rbac.authorization.k8s.io/aggregate-to-view":  "true",
		},
		Name: "system:metrics-server-aggregated-reader",
	},
	Rules: []rbacv1.PolicyRule{
		{
			APIGroups: []string{"metrics.k8s.io"},
			Resources: []string{"pods", "nodes"},
			Verbs:     []string{"get", "list", "watch"},
		},
	},
	TypeMeta: metav1.TypeMeta{
		APIVersion: "rbac.authorization.k8s.io/v1",
		Kind:       "ClusterRole",
	},
}

var SystemCR = &rbacv1.ClusterRole{
	ObjectMeta: metav1.ObjectMeta{
		Labels: map[string]string{
			"app.kubernetes.io/instance":   "metrics-server",
			"app.kubernetes.io/managed-by": "Helm",
			"app.kubernetes.io/name":       "metrics-server",
			"app.kubernetes.io/version":    "0.6.3",
			"helm.sh/chart":                "metrics-server-3.10.0",
		},
		Name: "system:metrics-server",
	},
	Rules: []rbacv1.PolicyRule{
		{
			APIGroups: []string{""},
			Resources: []string{"nodes/metrics"},
			Verbs:     []string{"get"},
		}, {
			APIGroups: []string{""},
			Resources: []string{"pods", "nodes", "namespaces", "configmaps"},
			Verbs:     []string{"get", "list", "watch"},
		},
	},
	TypeMeta: metav1.TypeMeta{
		APIVersion: "rbac.authorization.k8s.io/v1",
		Kind:       "ClusterRole",
	},
}

var SystemAuthDelegatorCRB = &rbacv1.ClusterRoleBinding{
	ObjectMeta: metav1.ObjectMeta{
		Labels: map[string]string{
			"app.kubernetes.io/instance":   "metrics-server",
			"app.kubernetes.io/managed-by": "Helm",
			"app.kubernetes.io/name":       "metrics-server",
			"app.kubernetes.io/version":    "0.6.3",
			"helm.sh/chart":                "metrics-server-3.10.0",
		},
		Name: "metrics-server:system:auth-delegator",
	},
	RoleRef: rbacv1.RoleRef{
		APIGroup: "rbac.authorization.k8s.io",
		Kind:     "ClusterRole",
		Name:     "system:auth-delegator",
	},
	Subjects: []rbacv1.Subject{
		{
			Kind:      "ServiceAccount",
			Name:      "metrics-server",
			Namespace: namespace,
		},
	},
	TypeMeta: metav1.TypeMeta{
		APIVersion: "rbac.authorization.k8s.io/v1",
		Kind:       "ClusterRoleBinding",
	},
}

var SystemCRB = &rbacv1.ClusterRoleBinding{
	ObjectMeta: metav1.ObjectMeta{
		Labels: map[string]string{
			"app.kubernetes.io/instance":   "metrics-server",
			"app.kubernetes.io/managed-by": "Helm",
			"app.kubernetes.io/name":       "metrics-server",
			"app.kubernetes.io/version":    "0.6.3",
			"helm.sh/chart":                "metrics-server-3.10.0",
		},
		Name: "system:metrics-server",
	},
	RoleRef: rbacv1.RoleRef{
		APIGroup: "rbac.authorization.k8s.io",
		Kind:     "ClusterRole",
		Name:     "system:metrics-server",
	},
	Subjects: []rbacv1.Subject{
		{
			Kind:      "ServiceAccount",
			Name:      "metrics-server",
			Namespace: namespace,
		},
	},
	TypeMeta: metav1.TypeMeta{
		APIVersion: "rbac.authorization.k8s.io/v1",
		Kind:       "ClusterRoleBinding",
	},
}
