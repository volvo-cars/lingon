// Copyright (c) 2023 Volvo Car Corporation
// SPDX-License-Identifier: Apache-2.0

// Code generated by lingon. EDIT AS MUCH AS YOU LIKE.

package ksm

import (
	appsv1 "k8s.io/api/apps/v1"
	corev1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/util/intstr"
)

var KsmDeploy = &appsv1.Deployment{
	ObjectMeta: metav1.ObjectMeta{
		Labels: map[string]string{
			"app.kubernetes.io/component":  "metrics",
			"app.kubernetes.io/instance":   "ksm",
			"app.kubernetes.io/managed-by": "Helm",
			"app.kubernetes.io/name":       "kube-state-metrics",
			"app.kubernetes.io/part-of":    "kube-state-metrics",
			"app.kubernetes.io/version":    "2.9.2",
			"helm.sh/chart":                "kube-state-metrics-5.8.1",
		},
		Name:      "ksm-kube-state-metrics",
		Namespace: "monitoring",
	},
	Spec: appsv1.DeploymentSpec{
		Replicas: P(int32(1)),
		Selector: &metav1.LabelSelector{MatchLabels: map[string]string{
			"app.kubernetes.io/instance": "ksm",
			"app.kubernetes.io/name":     "kube-state-metrics",
		}},
		Template: corev1.PodTemplateSpec{
			ObjectMeta: metav1.ObjectMeta{Labels: map[string]string{
				"app.kubernetes.io/component":  "metrics",
				"app.kubernetes.io/instance":   "ksm",
				"app.kubernetes.io/managed-by": "Helm",
				"app.kubernetes.io/name":       "kube-state-metrics",
				"app.kubernetes.io/part-of":    "kube-state-metrics",
				"app.kubernetes.io/version":    "2.9.2",
				"helm.sh/chart":                "kube-state-metrics-5.8.1",
			}},
			Spec: corev1.PodSpec{
				Containers: []corev1.Container{{
					Args:            []string{"--port=8080", "--resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments"},
					Image:           "registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.9.2",
					ImagePullPolicy: corev1.PullPolicy("IfNotPresent"),
					LivenessProbe: &corev1.Probe{
						InitialDelaySeconds: int32(5),
						ProbeHandler: corev1.ProbeHandler{HTTPGet: &corev1.HTTPGetAction{
							Path: "/healthz",
							Port: intstr.IntOrString{IntVal: int32(8080)},
						}},
						TimeoutSeconds: int32(5),
					},
					Name: "kube-state-metrics",
					Ports: []corev1.ContainerPort{{
						ContainerPort: int32(8080),
						Name:          "http",
					}},
					ReadinessProbe: &corev1.Probe{
						InitialDelaySeconds: int32(5),
						ProbeHandler: corev1.ProbeHandler{HTTPGet: &corev1.HTTPGetAction{
							Path: "/",
							Port: intstr.IntOrString{IntVal: int32(8080)},
						}},
						TimeoutSeconds: int32(5),
					},
					SecurityContext: &corev1.SecurityContext{Capabilities: &corev1.Capabilities{Drop: []corev1.Capability{corev1.Capability("ALL")}}},
				}},
				SecurityContext: &corev1.PodSecurityContext{
					FSGroup:        P(int64(65534)),
					RunAsGroup:     P(int64(65534)),
					RunAsNonRoot:   P(true),
					RunAsUser:      P(int64(65534)),
					SeccompProfile: &corev1.SeccompProfile{Type: corev1.SeccompProfileType("RuntimeDefault")},
				},
				ServiceAccountName: "ksm-kube-state-metrics",
			},
		},
	},
	TypeMeta: metav1.TypeMeta{
		APIVersion: "apps/v1",
		Kind:       "Deployment",
	},
}
