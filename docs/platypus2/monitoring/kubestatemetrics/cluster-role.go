// Copyright (c) 2023 Volvo Car Corporation
// SPDX-License-Identifier: Apache-2.0

// Code generated by lingon. EDIT AS MUCH AS YOU LIKE.

package ksm

import (
	rbacv1 "k8s.io/api/rbac/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

var KsmCR = &rbacv1.ClusterRole{
	ObjectMeta: metav1.ObjectMeta{
		Labels: map[string]string{
			"app.kubernetes.io/component":  "metrics",
			"app.kubernetes.io/instance":   "ksm",
			"app.kubernetes.io/managed-by": "Helm",
			"app.kubernetes.io/name":       "kube-state-metrics",
			"app.kubernetes.io/part-of":    "kube-state-metrics",
			"app.kubernetes.io/version":    "2.9.2",
			"helm.sh/chart":                "kube-state-metrics-5.8.1",
		},
		Name: "ksm-kube-state-metrics",
	},
	Rules: []rbacv1.PolicyRule{{
		APIGroups: []string{"certificates.k8s.io"},
		Resources: []string{"certificatesigningrequests"},
		Verbs:     []string{"list", "watch"},
	}, {
		APIGroups: []string{""},
		Resources: []string{"configmaps"},
		Verbs:     []string{"list", "watch"},
	}, {
		APIGroups: []string{"batch"},
		Resources: []string{"cronjobs"},
		Verbs:     []string{"list", "watch"},
	}, {
		APIGroups: []string{"extensions", "apps"},
		Resources: []string{"daemonsets"},
		Verbs:     []string{"list", "watch"},
	}, {
		APIGroups: []string{"extensions", "apps"},
		Resources: []string{"deployments"},
		Verbs:     []string{"list", "watch"},
	}, {
		APIGroups: []string{""},
		Resources: []string{"endpoints"},
		Verbs:     []string{"list", "watch"},
	}, {
		APIGroups: []string{"autoscaling"},
		Resources: []string{"horizontalpodautoscalers"},
		Verbs:     []string{"list", "watch"},
	}, {
		APIGroups: []string{"extensions", "networking.k8s.io"},
		Resources: []string{"ingresses"},
		Verbs:     []string{"list", "watch"},
	}, {
		APIGroups: []string{"batch"},
		Resources: []string{"jobs"},
		Verbs:     []string{"list", "watch"},
	}, {
		APIGroups: []string{"coordination.k8s.io"},
		Resources: []string{"leases"},
		Verbs:     []string{"list", "watch"},
	}, {
		APIGroups: []string{""},
		Resources: []string{"limitranges"},
		Verbs:     []string{"list", "watch"},
	}, {
		APIGroups: []string{"admissionregistration.k8s.io"},
		Resources: []string{"mutatingwebhookconfigurations"},
		Verbs:     []string{"list", "watch"},
	}, {
		APIGroups: []string{""},
		Resources: []string{"namespaces"},
		Verbs:     []string{"list", "watch"},
	}, {
		APIGroups: []string{"networking.k8s.io"},
		Resources: []string{"networkpolicies"},
		Verbs:     []string{"list", "watch"},
	}, {
		APIGroups: []string{""},
		Resources: []string{"nodes"},
		Verbs:     []string{"list", "watch"},
	}, {
		APIGroups: []string{""},
		Resources: []string{"persistentvolumeclaims"},
		Verbs:     []string{"list", "watch"},
	}, {
		APIGroups: []string{""},
		Resources: []string{"persistentvolumes"},
		Verbs:     []string{"list", "watch"},
	}, {
		APIGroups: []string{"policy"},
		Resources: []string{"poddisruptionbudgets"},
		Verbs:     []string{"list", "watch"},
	}, {
		APIGroups: []string{""},
		Resources: []string{"pods"},
		Verbs:     []string{"list", "watch"},
	}, {
		APIGroups: []string{"extensions", "apps"},
		Resources: []string{"replicasets"},
		Verbs:     []string{"list", "watch"},
	}, {
		APIGroups: []string{""},
		Resources: []string{"replicationcontrollers"},
		Verbs:     []string{"list", "watch"},
	}, {
		APIGroups: []string{""},
		Resources: []string{"resourcequotas"},
		Verbs:     []string{"list", "watch"},
	}, {
		APIGroups: []string{""},
		Resources: []string{"secrets"},
		Verbs:     []string{"list", "watch"},
	}, {
		APIGroups: []string{""},
		Resources: []string{"services"},
		Verbs:     []string{"list", "watch"},
	}, {
		APIGroups: []string{"apps"},
		Resources: []string{"statefulsets"},
		Verbs:     []string{"list", "watch"},
	}, {
		APIGroups: []string{"storage.k8s.io"},
		Resources: []string{"storageclasses"},
		Verbs:     []string{"list", "watch"},
	}, {
		APIGroups: []string{"admissionregistration.k8s.io"},
		Resources: []string{"validatingwebhookconfigurations"},
		Verbs:     []string{"list", "watch"},
	}, {
		APIGroups: []string{"storage.k8s.io"},
		Resources: []string{"volumeattachments"},
		Verbs:     []string{"list", "watch"},
	}},
	TypeMeta: metav1.TypeMeta{
		APIVersion: "rbac.authorization.k8s.io/v1",
		Kind:       "ClusterRole",
	},
}
