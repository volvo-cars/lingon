// Copyright (c) 2023 Volvo Car Corporation
// SPDX-License-Identifier: Apache-2.0

// Code generated by lingon. EDIT AS MUCH AS YOU LIKE.

package vmk8s

import (
	batchv1 "k8s.io/api/batch/v1"
	corev1 "k8s.io/api/core/v1"
	rbacv1 "k8s.io/api/rbac/v1"
	"k8s.io/apimachinery/pkg/api/resource"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

type CleanUp struct {
	VMK8sCleanupHookCR   *rbacv1.ClusterRole
	VMK8sCleanupHookCRB  *rbacv1.ClusterRoleBinding
	VMK8sCleanupHookJOBS *batchv1.Job
	VMK8sCleanupHookSA   *corev1.ServiceAccount
}

func CleanUpHook() *CleanUp {
	return &CleanUp{
		VMK8sCleanupHookCR:   VMK8sCleanupHookCR,
		VMK8sCleanupHookCRB:  VMK8sCleanupHookCRB,
		VMK8sCleanupHookJOBS: VMK8sCleanupHookJOBS,
		VMK8sCleanupHookSA:   VMK8sCleanupHookSA,
	}
}

var VMK8sCleanupHookCR = &rbacv1.ClusterRole{
	ObjectMeta: metav1.ObjectMeta{
		Annotations: map[string]string{
			"helm.sh/hook":               "pre-delete",
			"helm.sh/hook-delete-policy": "hook-succeeded",
			"helm.sh/hook-weight":        "-5",
		},
		Labels: map[string]string{
			"app.kubernetes.io/instance":   "vmk8s",
			"app.kubernetes.io/managed-by": "Helm",
			"app.kubernetes.io/name":       "victoria-metrics-k8s-stack",
			"app.kubernetes.io/version":    "v1.91.2",
			"helm.sh/chart":                "victoria-metrics-k8s-stack-0.16.3",
		},
		Name:      "vmk8s-victoria-metrics-k8s-stack-cleanup-hook",
		Namespace: "monitoring",
	},
	Rules: []rbacv1.PolicyRule{
		{
			APIGroups: []string{"operator.victoriametrics.com"},
			Resources: []string{
				"vmagents",
				"vmalerts",
				"vmsingles",
				"vmalertmanagers",
				"vmclusters",
			},
			Verbs: []string{"get", "list", "watch", "delete"},
		},
	},
	TypeMeta: metav1.TypeMeta{
		APIVersion: "rbac.authorization.k8s.io/v1",
		Kind:       "ClusterRole",
	},
}

var VMK8sCleanupHookCRB = &rbacv1.ClusterRoleBinding{
	ObjectMeta: metav1.ObjectMeta{
		Annotations: map[string]string{
			"helm.sh/hook":               "pre-delete",
			"helm.sh/hook-delete-policy": "hook-succeeded",
			"helm.sh/hook-weight":        "-5",
		},
		Labels: map[string]string{
			"app.kubernetes.io/instance":   "vmk8s",
			"app.kubernetes.io/managed-by": "Helm",
			"app.kubernetes.io/name":       "victoria-metrics-k8s-stack",
			"app.kubernetes.io/version":    "v1.91.2",
			"helm.sh/chart":                "victoria-metrics-k8s-stack-0.16.3",
		},
		Name:      "vmk8s-victoria-metrics-k8s-stack-cleanup-hook",
		Namespace: "monitoring",
	},
	RoleRef: rbacv1.RoleRef{
		APIGroup: "rbac.authorization.k8s.io",
		Kind:     "ClusterRole",
		Name:     "vmk8s-victoria-metrics-k8s-stack-cleanup-hook",
	},
	Subjects: []rbacv1.Subject{
		{
			Kind:      "ServiceAccount",
			Name:      "vmk8s-victoria-metrics-k8s-stack-cleanup-hook",
			Namespace: "monitoring",
		},
	},
	TypeMeta: metav1.TypeMeta{
		APIVersion: "rbac.authorization.k8s.io/v1",
		Kind:       "ClusterRoleBinding",
	},
}

var VMK8sCleanupHookJOBS = &batchv1.Job{
	ObjectMeta: metav1.ObjectMeta{
		Annotations: map[string]string{
			"helm.sh/hook":               "pre-delete",
			"helm.sh/hook-delete-policy": "hook-succeeded",
			"helm.sh/hook-weight":        "-5",
		},
		Labels: map[string]string{
			"app.kubernetes.io/instance":   "vmk8s",
			"app.kubernetes.io/managed-by": "Helm",
			"app.kubernetes.io/name":       "victoria-metrics-k8s-stack",
			"app.kubernetes.io/version":    "v1.91.2",
			"helm.sh/chart":                "victoria-metrics-k8s-stack-0.16.3",
		},
		Name:      "vmk8s-victoria-metrics-k8s-stack-cleanup-hook",
		Namespace: "monitoring",
	},
	Spec: batchv1.JobSpec{
		Template: corev1.PodTemplateSpec{
			ObjectMeta: metav1.ObjectMeta{
				Labels: map[string]string{
					"app.kubernetes.io/instance":   "vmk8s",
					"app.kubernetes.io/managed-by": "Helm",
					"app.kubernetes.io/name":       "victoria-metrics-k8s-stack",
					"app.kubernetes.io/version":    "v1.91.2",
					"helm.sh/chart":                "victoria-metrics-k8s-stack-0.16.3",
				},
				Name: "vmk8s",
			},
			Spec: corev1.PodSpec{
				Containers: []corev1.Container{
					{
						Command: []string{
							"/bin/sh",
							"-c",
							`kubectl delete vmalerts --all --ignore-not-found=true; ` +
								`kubectl delete vmagents --all --ignore-not-found=true; ` +
								`kubectl delete vmsingles --all --ignore-not-found=true; ` +
								`kubectl delete vmalertmanagers --all --ignore-not-found=true; ` +
								`kubectl delete vmclusters --all --ignore-not-found=true;`,
						},
						Image:           "gcr.io/google_containers/hyperkube:v1.18.0",
						ImagePullPolicy: corev1.PullPolicy("IfNotPresent"),
						Name:            "kubectl",
						Resources: corev1.ResourceRequirements{
							Limits: map[corev1.ResourceName]resource.Quantity{
								corev1.ResourceName("cpu"):    resource.MustParse("500m"),
								corev1.ResourceName("memory"): resource.MustParse("256Mi"),
							},
							Requests: map[corev1.ResourceName]resource.Quantity{
								corev1.ResourceName("cpu"):    resource.MustParse("100m"),
								corev1.ResourceName("memory"): resource.MustParse("56Mi"),
							},
						},
					},
				},
				RestartPolicy:      corev1.RestartPolicy("OnFailure"),
				ServiceAccountName: "vmk8s-victoria-metrics-k8s-stack-cleanup-hook",
			},
		},
	},
	TypeMeta: metav1.TypeMeta{
		APIVersion: "batch/v1",
		Kind:       "Job",
	},
}

var VMK8sCleanupHookSA = &corev1.ServiceAccount{
	ObjectMeta: metav1.ObjectMeta{
		Annotations: map[string]string{
			"helm.sh/hook":               "pre-delete",
			"helm.sh/hook-delete-policy": "hook-succeeded",
			"helm.sh/hook-weight":        "-5",
		},
		Labels: map[string]string{
			"app.kubernetes.io/instance":   "vmk8s",
			"app.kubernetes.io/managed-by": "Helm",
			"app.kubernetes.io/name":       "victoria-metrics-k8s-stack",
			"app.kubernetes.io/version":    "v1.91.2",
			"helm.sh/chart":                "victoria-metrics-k8s-stack-0.16.3",
		},
		Name:      "vmk8s-victoria-metrics-k8s-stack-cleanup-hook",
		Namespace: "monitoring",
	},
	TypeMeta: metav1.TypeMeta{
		APIVersion: "v1",
		Kind:       "ServiceAccount",
	},
}
