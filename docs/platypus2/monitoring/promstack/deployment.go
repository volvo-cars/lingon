// Copyright (c) 2023 Volvo Car Corporation
// SPDX-License-Identifier: Apache-2.0

// Code generated by lingon. EDIT AS MUCH AS YOU LIKE.

package promstack

import (
	appsv1 "k8s.io/api/apps/v1"
	corev1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

var OperatorDeploy = &appsv1.Deployment{
	ObjectMeta: metav1.ObjectMeta{
		Labels: map[string]string{
			"app":                          "kube-prometheus-stack-operator",
			"app.kubernetes.io/instance":   "kube-prometheus-stack",
			"app.kubernetes.io/managed-by": "Helm",
			"app.kubernetes.io/part-of":    "kube-prometheus-stack",
			"app.kubernetes.io/version":    "45.27.2",
			"chart":                        "kube-prometheus-stack-45.27.2",
			"heritage":                     "Helm",
			"release":                      "kube-prometheus-stack",
		},
		Name:      "kube-prometheus-stack-operator",
		Namespace: namespace,
	},
	Spec: appsv1.DeploymentSpec{
		Replicas: P(int32(1)),
		Selector: &metav1.LabelSelector{
			MatchLabels: map[string]string{
				"app":     "kube-prometheus-stack-operator",
				"release": "kube-prometheus-stack",
			},
		},
		Template: corev1.PodTemplateSpec{
			ObjectMeta: metav1.ObjectMeta{
				Labels: map[string]string{
					"app":                          "kube-prometheus-stack-operator",
					"app.kubernetes.io/instance":   "kube-prometheus-stack",
					"app.kubernetes.io/managed-by": "Helm",
					"app.kubernetes.io/part-of":    "kube-prometheus-stack",
					"app.kubernetes.io/version":    "45.27.2",
					"chart":                        "kube-prometheus-stack-45.27.2",
					"heritage":                     "Helm",
					"release":                      "kube-prometheus-stack",
				},
			},
			Spec: corev1.PodSpec{
				Containers: []corev1.Container{
					{
						Args: []string{
							"--kubelet-service=kube-system/kube-prometheus-stack-kubelet",
							"--localhost=127.0.0.1",
							"--prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.65.1",
							"--config-reloader-cpu-request=200m",
							"--config-reloader-cpu-limit=200m",
							"--config-reloader-memory-request=50Mi",
							"--config-reloader-memory-limit=50Mi",
							"--thanos-default-base-image=quay.io/thanos/thanos:v0.30.2",
							"--web.enable-tls=true",
							"--web.cert-file=/cert/cert",
							"--web.key-file=/cert/key",
							"--web.listen-address=:10250",
							"--web.tls-min-version=VersionTLS13",
						},
						Image:           "quay.io/prometheus-operator/prometheus-operator:v0.65.1",
						ImagePullPolicy: corev1.PullPolicy("IfNotPresent"),
						Name:            "kube-prometheus-stack",
						Ports: []corev1.ContainerPort{
							{
								ContainerPort: int32(10250),
								Name:          "https",
							},
						},
						SecurityContext: &corev1.SecurityContext{ReadOnlyRootFilesystem: P(true)},
						VolumeMounts: []corev1.VolumeMount{
							{
								MountPath: "/cert",
								Name:      "tls-secret",
								ReadOnly:  true,
							},
						},
					},
				},
				SecurityContext: &corev1.PodSecurityContext{
					FSGroup:      P(int64(65534)),
					RunAsGroup:   P(int64(65534)),
					RunAsNonRoot: P(true),
					RunAsUser:    P(int64(65534)),
				},
				ServiceAccountName: "kube-prometheus-stack-operator",
				Volumes: []corev1.Volume{
					{
						Name: "tls-secret",
						VolumeSource: corev1.VolumeSource{
							Secret: &corev1.SecretVolumeSource{
								DefaultMode: P(int32(420)),
								SecretName:  "kube-prometheus-stack-admission",
							},
						},
					},
				},
			},
		},
	},
	TypeMeta: metav1.TypeMeta{
		APIVersion: "apps/v1",
		Kind:       "Deployment",
	},
}
